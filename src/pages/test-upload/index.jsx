import Head from 'next/head'
import { useState } from 'react';
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import axios from 'axios'
import { FormControl, Input, Button, useForkRef } from '@mui/material';

const inter = Inter({ subsets: ['latin'] })

const apiUrl = "https://asl-api.azurewebsites.net"

export default function TestUpload() {
  const [userValue, setUserValue] = useState({
    firstName: "",
    lastName: "",
    middleName: "",
    maritalStatus: "",
    homeAddress: "",
    birthDate: "",
    mobileNumber: "",
    profilePhoto: "",
    telephoneNumber: ""
  })

  function handleFirstNameChange(e) {
    setUserValue(prev => ({...prev, firstName: e.target.value}));
  }
  function handleLastNameChange(e) {
    setUserValue(prev => ({...prev, lastName: e.target.value}));
  }
  function handleMiddleNameChange(e) {
    setUserValue(prev => ({...prev, middleName: e.target.value}));
  }
  function handleStatusChange(e) {
    setUserValue(prev => ({...prev, maritalStatus: e.target.value}));
  }
  function handleAddressChange(e) {
    setUserValue(prev => ({...prev, homeAddress: e.target.value}));
  }

  function handleMobileChange(e) {
    e.preventDefault();
    setUserValue(prev => ({ ...prev, mobileNumber: e.target.value }));
  }

  function handleTelephoneChange(e) {
    e.preventDefault();
    setUserValue(prev => ({ ...prev, profilePhoto: e.target.value }));
  }

  function handlePhotoChange(e) {
    e.preventDefault();
    
    if (e.target.files[0]) {
      console.log(e.target.files)
      setUserValue(prev => ({ ...prev, profilePhoto: e.target.files[0] }));
    }
  }

  function handleGetCertificate() {
    axios.get(`${apiUrl}/cor`)

  }

  
  function handleBirthChange(e) {
    setUserValue(prev => ({...prev, birthDate: e.target.value}));
  }

  function handleLogout() {
    localStorage.removeItem("jwt");
  }

  function handleGetResidents() {
    const jwt = localStorage.getItem("jwt");

    axios.interceptors.request.use(
      config => {
        const { origin } = new URL(config.url);
        const allowedOrigins = [apiUrl];

        if (allowedOrigins.includes(origin)) {
          config.headers["Authorization"] = `${jwt}`;
        }
        return config;
      },
      error => {
        return Promise.reject(error);
      }
    );

    axios.get(`${apiUrl}/resident`).then(res => console.log(res)).catch(err => console.log(err));
  }

  function handleSubmit() {
    let formData = new FormData();

    for (let key in userValue) {
      if (userValue.hasOwnProperty(key)) {
        formData.append(key, userValue[key])
      }
    }

    console.log(formData._boundary);

    axios.post(`${apiUrl}/resident`, formData).then(
      res => console.log(res)).catch(e => console.log(e));
    
  }

  function handleLogin() {
    const credentials = {
      userName: "TestUser",
      password: "MyVeryOwnTestPassword123$"
    }
    
    axios.post(`${apiUrl}/account/login`, credentials).then(res => {
      localStorage.setItem("jwt", `Bearer ${res.data}`);
      console.log(res)
    }).catch(e => console.log(e));

  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <Input type="text" name="firstName" placeholder="first name" value={userValue.firstName} onChange={handleFirstNameChange} />
        <Input type="text" name="lastName" placeholder="last name" value={userValue.lastName} onChange={handleLastNameChange}/>
        <Input type="text" name="middleName" placeholder="middle name" value={userValue.middleName} onChange={handleMiddleNameChange}/>
        <Input type="text" name="maritalStatus" placeholder="status" value={userValue.maritalStatus} onChange={handleStatusChange}/>
        <Input type="text" name="homeAddress" placeholder="address" value={userValue.homeAddress} onChange={handleAddressChange}/>
        <Input type="text" name="birthDate" placeholder="birth day" value={userValue.birthDate} onChange={handleBirthChange}/>
        <Input type="text" name="mobileNumber" placeholder="mobile no" value={userValue.mobileNumber} onChange={handleMobileChange}/>
        <Input type="text" name="telephoneNumber" placeholder="telephone no" value={userValue.telephoneNumber} onChange={handleTelephoneChange}/>
        <input accept="*" type="file" name="userPicture" onChange={handlePhotoChange} />
        <Image src="https://ik.imagekit.io/335jblpnu5/profile.png" width="100" height="100"/>
        <Button type="submit" onClick={handleSubmit}>Submit</Button>
        <Button type="submit" onClick={handleGetResidents}>Get Residents</Button>
        <Button type="submit" onClick={handleLogin}>Login</Button>
        <Button type="submit" onClick={handleLogout}>Logout</Button>
        <a href={`${apiUrl}/cor`} target="_blank" rel="noopener noreferrer" ><button>Download CV</button>Get Certificate</a>
    </>
  )
}
